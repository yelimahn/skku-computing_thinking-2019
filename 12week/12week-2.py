# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Y0QV4mb_qfQYoZvSLwp5DqoEIYe9Qqi
"""

import pandas as pd
import numpy as np
from ast import literal_eval
from sklearn.metrics.pairwise import cosine_similarity
import sys

!pip install plotnine

path='/content/Q.csv'
df=pd.read_csv(path,parse_dates=['processing_tags'],encoding='utf8',engine='python')

df['processing_tags'] = df['processing_tags'].fillna('[]').apply(literal_eval)

def tag_num():
  tags = df[['id', 'processing_tags']]
  # unnest tags
  tags_unnest = np.dstack(

      (
          np.repeat(tags.id.values, list(map(len, tags.processing_tags))), 
          np.concatenate(tags.processing_tags.values)
      )
  )
  tags = pd.DataFrame(data = tags_unnest[0], columns = tags.columns)
  tags['id'] = tags['id'].astype(str)
  del tags_unnest

  tag=input("태그를 입력 :")
  condition=(tags['processing_tags']==tag)
  print(len(tags[condition]),"개")


def tag_user():
  tags = df[['id', 'processing_tags']]
  # unnest tags
  tags_unnest = np.dstack(

      (
          np.repeat(tags.id.values, list(map(len, tags.processing_tags))), 
          np.concatenate(tags.processing_tags.values)
      )
  )
  tags = pd.DataFrame(data = tags_unnest[0], columns = tags.columns)
  tags['id'] = tags['id'].astype(str)
  del tags_unnest

  tag=input("태그를 입력 :")
  condition=(tags['processing_tags'].str.find(tag)==0)
  print(tags[condition]['id'])


def user_based():
  user_pivot=input("id :")

  tags.pivot_table(index='id', columns='processing_tags',values="new").fillna(0)
  user_sim = cosine_similarity(user_pivot)
  user_sim_pivot = pd.DataFrame(data = user_sim, index=user_pivot.index, columns=user_pivot.index)
  sim_id=df.sort_values(['id',user_sim],ascending=False).head(1)
  print(df.loc(sim_id,'processing_tags'))

    
def main():
    print("1. 태그 개수 검색")
    print("2. 태그 사용자 검색")
    print("3. 사용자 기반 태그 추천")
    print("0. 종료")
    num=int(input(">>>"))

    if num==0:
        sys.exit()
    elif num==1:
        tag_num()
    elif num==2:
        tag_user()
    elif num==3:
        user_based()
    main()

main()

